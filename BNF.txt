

functiondeclaration = funcname args bracketedexpression || main bracketedexpression

bracketedexpression = lb valueex rb || lb innerex semicolon valueex rb


innerex = inner semicolon inner || inner

inner = functioncall || condition || innerex


valueex = value arith value || value binaryop value || value

value = var || bracketedexpression || functioncall || read() || valueex


args = varname varname .. varname


functioncall = funcname lp functionarg rp

functionarg = value , value , ..  value


condition = if lp value rp bracketedexpression bracketedexpression

var = number || varname 


funcname = [a-z]*
varname = [a-z]*


